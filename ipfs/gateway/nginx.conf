upstream gateway {
    server 127.0.0.1:8080;

$(for h in $(lookup gateway_hosts); do
  if test "host$h" != "host$host"; then
    printf '    server [%s]:8080 backup; # %s.v.ipfs.team\n' $(host=$h var cjdns_ipv6) $h
  fi
done)
}

upstream ws_bootstrap {
    server 127.0.0.1:8081;
}

map \$http_upgrade \$upstream {
    default gateway;
    websocket ws_bootstrap;
}

map \$http_upgrade \$connection_upgrade {
    default upgrade;
    '' close;
}

server {
    server_name gateway.ipfs.io;
    access_log /var/log/nginx/access.log mtail;

    listen 80 default_server;
    listen [::]:80 default_server;
    listen [$(var cjdns_ipv6)]:80 default_server;

    listen 443 default_server ssl;
    listen [::]:443 default_server ssl;
    ssl_certificate /etc/nginx/certs/ipfs.io.crt;
    ssl_certificate_key /etc/nginx/certs/ipfs.io.key;
    ssl_dhparam /etc/nginx/certs/dhparam.pem;
    ssl_trusted_certificate /etc/nginx/certs/ipfs.io.trustchain.crt;

    include denylist/denylist.conf;

    proxy_set_header Host \$host:80;
    proxy_set_header X-Ipfs-Gateway-Prefix "";
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection \$connection_upgrade;
    proxy_pass_header Server;
    proxy_pass http://\$upstream;
    proxy_read_timeout 1800s;
}

server {
    server_name ipfs.io;
    access_log /var/log/nginx/access.log mtail;

    listen 80;
    listen [::]:80;
    listen [$(var cjdns_ipv6)]:80;

    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/nginx/certs/ipfs.io.crt;
    ssl_certificate_key /etc/nginx/certs/ipfs.io.key;
    ssl_dhparam /etc/nginx/certs/dhparam.pem;
    ssl_trusted_certificate /etc/nginx/certs/ipfs.io.trustchain.crt;

    include denylist/denylist.conf;

        proxy_pass http://\$upstream;
        proxy_pass_header Server;
        proxy_read_timeout 1800s;

    location /blog/ {
        rewrite "^/blog(/.*)$" \$1 break;
        proxy_set_header Host blog.ipfs.io;
        proxy_set_header X-Ipfs-Gateway-Prefix /blog;
    }

    location /refs/ {
        rewrite "^/refs(/.*)$" \$1 break;
        proxy_set_header Host refs.ipfs.io;
        proxy_set_header X-Ipfs-Gateway-Prefix /refs;
    }

    proxy_set_header Host \$host:80;
    proxy_set_header X-Ipfs-Gateway-Prefix "";
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection \$connection_upgrade;
    proxy_pass_header Server;
    proxy_pass http://\$upstream;
    proxy_read_timeout 1800s;
}
